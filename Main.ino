void setup() {
  // put your setup code here, to run once:

}

void loop() {/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/759c6a75-5e53-4c71-8b31-89fcfd78170f 
  Arduino IoT Cloud Variables description
  The following variables are automatically generated and updated when changes are made to the Thing

  String message;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <BH1750FVI.h>

// Create the Lightsensor instance
BH1750FVI LightSensor(BH1750FVI::k_DevModeContLowRes);
int light;
void setup() {
  
  Serial.begin(9600);
  LightSensor.begin();
  // Initialize serial and wait for port to open:
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  
  //pinMode(LED_BUILTIN, OUTPUT);

}

void loop() {
  ArduinoCloud.update();
  light = LightSensor.GetLightIntensity();
  if(light > 300 ){
   message = "Adequate sunlight is present"; 
  }
  else{
  message = "Adequate sunlight is not present";  
  }
  //
  Serial.println(light);
  Serial.println(message);
  
  
  delay(1000);
  
}


/*
  Since Led is READ_WRITE variable, onLedChange() is
  executed every time a new value is received from IoT Cloud.
*/
// void onLedChange()  {
//   digitalWrite(LED_BUILTIN, led);
// }


/*
  Since Message is READ_WRITE variable, onMessageChange() is
  executed every time a new value is received from IoT Cloud.
*/

  // put your main code here, to run repeatedly:

}
